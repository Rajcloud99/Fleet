var mongoose = require ('mongoose');
var validator = require('validator');

var oCity = {
		_id: String,//autogenerated bt our server
		c: String,
		s: String,
		p: Number,
		d: String,
		sf : String,
		address_components:{
			  street_number: String,//'short_name'
			  route: String,//'long_name'
			  sublocality_level_2: String,//'long_name'
			  sublocality_level_3: String,//'long_name'
			  sublocality_level_1: String,//'long_name'
			  sublocality: String,//'long_name'
			  locality: String,//'long_name'
			  administrative_area_level_2: String,//'long_name'
			  administrative_area_level_1: String,//'short_name',
			  administrative_area_level_1_f: String,//'long_name'
			  country : String,//'short_name',
			  country_f : String,//'long_name',
			  postal_code: Number,//'short_name'
		},
		formatted_address : String,
		geometry : {
			location:{
				lat: Number,
				lng:Number
			}
		},
		place_id:String,
		types:[String],
		url : String,
		vicinity:String		
};

var intNumber =
	{
		'type': 'Number',
		'set' :
			function(num) {
				return Math.abs(Math.round(num));
			}
	};

var UnregisteredUserSchema = new mongoose.Schema(
	{
		'owner_name' : String,
		'company_name' : String,
		'mobile' : [	
			{
				'type': Number,
				'set' :
					function(num) {
					return Math.abs(Math.round(num));
				}
			}
		],

		'type' :{
				'type': String,
				'enum': ['broker','truck_owner','customer', 'aggregator', 'dealer', 'transporter','pnm','sl','cha'],
				default : 'transporter'
		},

		'email' :
			{
				'type': String,
				'set' :
					function(email) {
						return email.toLowerCase();
					},
				'validate': [validator.isEmail, "Invalid Email"]
			},

		'address' : String,
		'city' : oCity,
		'landline' : [{
			'code':intNumber,
			'number':intNumber
		}],
		'fax_no' :[{
			'code':intNumber,
			'number':intNumber
		}],
		'pan_no' : String,
		'noncust_details' :
			{
				'service_tax_no': intNumber,
				'vehicle_type': [{'truck_type': String, 'code': String, 'category': String, 'capacity': Number}], // TODO: Unknown vehicle types allowed, so not enum
				'interested_cities':[{'city':oCity,'pincode':intNumber}],
				'branch_cities':[{'city':oCity,'pincode':intNumber}],
				'daily_serv_cities':[{'city':oCity,'pincode':intNumber}]
			},
		'isRegistered':{
			'type': Boolean,
			default: false
		},
		created_at: {'type': Date, default: new Date()},
		latModified: {'type': Date, default: new Date()}
	}
);

module.exports = mongoose.model('UnregisteredUser', UnregisteredUserSchema);